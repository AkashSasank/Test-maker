{"version":3,"sources":["utils/axios/index.js","utils/axios/interceptors.js","pages/Catalogue/style.js","components/TestButton/index.js","components/TestButton/component.jsx","pages/Catalogue/component.jsx"],"names":["api","axios","create","baseURL","timeout","interceptors","request","use","config","error","Promise","reject","response","App","styled","div","appLogoSpin","keyframes","AppHeader","img","header","a","ErrorBoundary","props","getTestQuestions","get","testURL","then","res","r","data","console","log","openTest","URL","window","location","href","state","hasError","key","testName","class","onClick","this","Component","Catalogue","question_sets","question_categories","setState","Object","keys","map","category","question_urls","index","React"],"mappings":"2HAIA,IAAMA,E,OAAMC,EAAMC,OAAO,CACvBC,QAAQ,gDACRC,QAAS,MAIXJ,EAAIK,aAAaC,QAAQC,KCTlB,SAAmBC,GAGxB,OAAOA,KAGF,SAAwBC,GAE7B,OAAOC,QAAQC,OAAOF,MDIxBT,EAAIK,aAAaO,SAASL,KCAnB,SAAoBK,GAGzB,OAAOA,KAGF,SAAyBH,GAG9B,OAAOC,QAAQC,OAAOF,MDPTT,O,u9BEbR,IAAMa,EAAMC,IAAOC,IAAV,KAIVC,EAAcC,YAAH,KAiBJC,GARUJ,IAAOK,IAAV,IAKHH,GAGQF,IAAOM,OAAV,M,GAWCN,IAAOO,EAAV,K,OCjCLC,E,kDCGb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IASRC,iBAAmB,WACjBxB,IAAIyB,IAAI,EAAKF,MAAMG,SAASC,MAAK,SAAAC,GAC/B,IAAMC,EAAID,EAAIE,KAAK,GACnBC,QAAQC,IAAIH,OAbG,EAiBnBI,SAAW,WACT,IAAIC,EAAM,QAAS,EAAKX,MAAMG,QAC9BS,OAAOC,SAASC,KAAOH,GAjBvB,EAAKI,MAAQ,CAAEC,UAAU,GACzB,EAAKhB,MAAQ,CACXiB,IAAI,MACJC,SAAS,OACTf,QAAQ,IANO,E,qDAuBf,OACE,wBAAQgB,MAAM,sBAA2CC,QAASC,KAAKX,SAAvE,SAAmFW,KAAKrB,MAAMkB,UAArDG,KAAKrB,MAAMiB,S,GAzBpBK,aCGnBC,E,4MACnBR,MAAQ,CACNS,cAAc,GACdC,oBAAoB,I,kEAGD,IAAD,OAClBhD,IAAIyB,IAAJ,UACGE,MAAK,SAAAC,GACJ,IAAMC,EAAID,EAAIE,KAAK,GACnB,EAAKmB,SAAS,CAACF,cAAelB,IAC9B,EAAKoB,SAAS,CAACD,oBAAqBE,OAAOC,KAAKtB,U,+BAI7C,IAAD,OACN,OACE,cAAChB,EAAD,UACE,cAACK,EAAD,UACA,qBAAKwB,MAAM,sCAAX,SAEIE,KAAKN,MAAMU,oBAAoBI,KAC7B,SAAAC,GAAQ,OACP,sBAAKX,MAAM,kDAAX,UACE,6BAAKW,IACL,qBAAKX,MAAM,qDAAX,SACA,EAAKJ,MAAMS,cAAcM,GAAzB,KAA2CD,KAC1C,SAACE,EAAeC,GAAhB,OACE,cAAC,EAAD,CAAqCd,SAAU,QAAUc,EAAQ,GAAI7B,QAAS4B,EAA9E,cAAiB,YAAaC,OAHoC,uBAAuBF,KAF5B,YAAYA,gB,GAvBtDG,IAAMX","file":"static/js/6.e3db3e52.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nimport { onRequest, onRequestError, onResponse, onResponseError } from './interceptors'\r\n\r\nconst api = axios.create({\r\n  baseURL: `https://test-taking-app.herokuapp.com/api/v1/`, \r\n  timeout: 3000,\r\n});\r\n\r\n// Add a request interceptor\r\napi.interceptors.request.use(onRequest, onRequestError);\r\n\r\n// Add a response interceptor\r\napi.interceptors.response.use(onResponse, onResponseError);\r\n\r\nexport default api;","// Add a request interceptor\r\nexport function onRequest(config) {\r\n  // Do something before request is sent\r\n  // like adding token to request header\r\n  return config;\r\n}\r\n\r\nexport function onRequestError(error) {\r\n  // Do something with request error\r\n  return Promise.reject(error);\r\n};\r\n\r\n// Add a response interceptor\r\nexport function onResponse(response) {\r\n  // Any status code that lie within the range of 2xx cause this function to trigger\r\n  // Do something with response data\r\n  return response;\r\n}\r\n\r\nexport function onResponseError(error) {\r\n  // Any status codes that falls outside the range of 2xx cause this function to trigger\r\n  // Do something with response error\r\n  return Promise.reject(error);\r\n};","import styled, { keyframes } from \"styled-components\";\r\n\r\nexport const App = styled.div`\r\n  text-align: center;\r\n`;\r\n\r\nconst appLogoSpin = keyframes`\r\n  from {\r\n    transform: rotate(0deg);\r\n  }\r\n  to {\r\n    transform: rotate(360deg);\r\n  }\r\n`;\r\n\r\nexport const AppLogo = styled.img`\r\n  height: 40vmin;\r\n  pointer-events: none;\r\n\r\n  @media (prefers-reduced-motion: no-preference) {\r\n    animation: ${appLogoSpin} infinite 20s linear;\r\n  }\r\n`;\r\nexport const AppHeader = styled.header`\r\n  background-color: #282c34;\r\n  min-height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-size: calc(10px + 2vmin);\r\n  color: white;\r\n`;\r\n\r\nexport const AppLink = styled.a`\r\n  color: #61dafb;\r\n`;\r\n","import ErrorBoundary from './component';\r\nexport default ErrorBoundary;","import { Component } from \"react\";\r\nimport api from \"../../utils/axios\";\r\n\r\nexport default class TestButton extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { hasError: false };\r\n    this.props = {\r\n      key:'key',\r\n      testName:'name',\r\n      testURL:''\r\n    }\r\n  }\r\n\r\n  getTestQuestions = ()=>{\r\n    api.get(this.props.testURL).then(res => {\r\n      const r = res.data[0];\r\n      console.log(r)\r\n    })\r\n\r\n  }\r\n  openTest = ()=>{\r\n    let URL = 'test/'+ this.props.testURL\r\n    window.location.href = URL;\r\n  }\r\n\r\n  render() {\r\n      return (\r\n        <button class=\"btn btn-primary m-1\" key={this.props.key} onClick={this.openTest} >{this.props.testName}</button>\r\n      );\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\nimport { App, AppHeader} from './style';\r\nimport api from '../../utils/axios';\r\nimport TestButton from '../../components/TestButton';\r\n\r\nexport default class Catalogue extends React.Component {\r\n  state = {\r\n    question_sets:[],\r\n    question_categories:[]\r\n  }\r\n  \r\n  componentDidMount() {\r\n    api.get(`tests/`)\r\n      .then(res => {\r\n        const r = res.data[0];\r\n        this.setState({question_sets: r})     \r\n        this.setState({question_categories: Object.keys(r)})  \r\n      })\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <App>\r\n        <AppHeader>\r\n        <div class=\"d-flex justify-content-around w-100\">\r\n          {\r\n            this.state.question_categories.map(\r\n              category=>(\r\n               <div class=\"container w-auto p-5 bg-dark rounded shadow-lg \" key={'container'+category}>\r\n                 <h3>{category}</h3>\r\n                 <div class=\"d-flex  flex-wrap justify-content-around w-100 p-5\" key={'test-links-container'+category} >\r\n                {this.state.question_sets[category]['uuid'].map(\r\n                  (question_urls, index)=>(\r\n                    <TestButton key={'test-link'+ index} testName={'Test' + (index + 1)} testURL={question_urls}> </TestButton>\r\n                  )\r\n                )}\r\n                </div>\r\n                </div>\r\n              )\r\n            ) \r\n          }\r\n         </div>\r\n  \r\n        </AppHeader>\r\n      </App>\r\n    )\r\n  }\r\n\r\n}"],"sourceRoot":""}