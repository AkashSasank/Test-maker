{"version":3,"sources":["utils/axios/index.js","utils/axios/interceptors.js","pages/TestPage/style.js","components/QuestionNavBlock/component.jsx","components/QuestionNavBlock/index.js","pages/TestPage/component.jsx"],"names":["api","axios","create","baseURL","timeout","interceptors","request","use","config","error","Promise","reject","response","App","styled","div","appLogoSpin","keyframes","AppHeader","img","header","a","Pill","props","setQuestionNumber","localStorage","setItem","value","console","log","getItem","status","color","class","this","onClick","Component","QuestionNavBlock","num_questions","items","num_rows","Math","ceil","sqrt","num_cols","row","row_data","col","num","push","TestPage","state","questions","count","question_text","choice_list","q_num","uuid","category","setQuestion","parseInt","current_question","setState","nextQuestion","next_q","setNextQuestion","previousQuestion","testID","match","params","get","then","res","r","data","question_list","length","map","choice","type","name","for","React"],"mappings":"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","file":"static/js/5.33943483.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nimport { onRequest, onRequestError, onResponse, onResponseError } from './interceptors'\r\n\r\nconst api = axios.create({\r\n  baseURL: `https://test-taking-app.herokuapp.com/api/v1/`, \r\n  timeout: 3000,\r\n});\r\n\r\n// Add a request interceptor\r\napi.interceptors.request.use(onRequest, onRequestError);\r\n\r\n// Add a response interceptor\r\napi.interceptors.response.use(onResponse, onResponseError);\r\n\r\nexport default api;","// Add a request interceptor\r\nexport function onRequest(config) {\r\n  // Do something before request is sent\r\n  // like adding token to request header\r\n  return config;\r\n}\r\n\r\nexport function onRequestError(error) {\r\n  // Do something with request error\r\n  return Promise.reject(error);\r\n};\r\n\r\n// Add a response interceptor\r\nexport function onResponse(response) {\r\n  // Any status code that lie within the range of 2xx cause this function to trigger\r\n  // Do something with response data\r\n  return response;\r\n}\r\n\r\nexport function onResponseError(error) {\r\n  // Any status codes that falls outside the range of 2xx cause this function to trigger\r\n  // Do something with response error\r\n  return Promise.reject(error);\r\n};","import styled, { keyframes } from \"styled-components\";\r\n\r\nexport const App = styled.div`\r\n  text-align: center;\r\n`;\r\n\r\nconst appLogoSpin = keyframes`\r\n  from {\r\n    transform: rotate(0deg);\r\n  }\r\n  to {\r\n    transform: rotate(360deg);\r\n  }\r\n`;\r\n\r\nexport const AppLogo = styled.img`\r\n  height: 40vmin;\r\n  pointer-events: none;\r\n\r\n  @media (prefers-reduced-motion: no-preference) {\r\n    animation: ${appLogoSpin} infinite 20s linear;\r\n  }\r\n`;\r\nexport const AppHeader = styled.header`\r\n  background-color: #282c34;\r\n  min-height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-size: calc(10px + 2vmin);\r\n  color: white;\r\n`;\r\n\r\nexport const AppLink = styled.a`\r\n  color: #61dafb;\r\n`;\r\n","import { Component } from \"react\";\r\nimport './style.css'\r\nimport api from \"../../utils/axios\";\r\n\r\n\r\nclass Pill extends Component{\r\n  constructor(props) {\r\n    super(props);\r\n    this.props = {\r\n      value:'',\r\n      status:'to-do',\r\n      color:'bg-primary'\r\n    }\r\n  }\r\n\r\n  setQuestionNumber = ()=>{\r\n    localStorage.setItem(\"q\", this.props.value===0?0:this.props.value-1);\r\n    console.log(localStorage.getItem(\"q\"))\r\n  }\r\n\r\n\r\n  render(){\r\n    return(\r\n      <button class={\"button col-sm border border-dark rounded p-1 \"+ this.props.color} onClick={this.setQuestionNumber}>\r\n      {this.props.value}\r\n    </button>\r\n    )\r\n  }\r\n}\r\n\r\nexport default class QuestionNavBlock extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.props = {\r\n      num_questions:0,\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    localStorage.setItem(\"q\", 0)\r\n  }\r\n\r\n  render() {\r\n    const items = []\r\n    let num_rows = Math.ceil(Math.sqrt(this.props.num_questions))\r\n    let num_cols = Math.ceil(this.props.num_questions/num_rows)\r\n    for(let row = 0;row<num_rows;row++) {\r\n\r\n      const row_data = []\r\n      for(let col = 1;col<=num_cols;col++) {\r\n      \r\n        let num = row*num_cols+col;\r\n        if(num<=this.props.num_questions){\r\n\r\n          row_data.push(\r\n          <Pill value={num} color='bg-primary'></Pill>\r\n          )  \r\n        }   \r\n      }\r\n\r\n      items.push(\r\n          <div class=\"row flex-nowrap\">\r\n            {row_data}\r\n          </div>\r\n                )\r\n    \r\n            \r\n            \r\n    }\r\n      return (\r\n        <div >\r\n          <table class=\"table d-flex justify-content-center\">\r\n            <tbody>\r\n            {\r\n           items\r\n          }\r\n            </tbody>\r\n          </table>\r\n         \r\n        </div>\r\n       \r\n      );\r\n    }\r\n}\r\n","import QuestionNavBlock from './component';\r\nexport default QuestionNavBlock;","import React from 'react';\r\nimport { App, AppHeader} from './style';\r\nimport api from '../../utils/axios';\r\nimport QuestionNavBlock from '../../components/QuestionNavBlock';\r\nexport default class TestPage extends React.Component {\r\n  \r\n  state = {\r\n    questions : [], \r\n    count: 0,\r\n    question_text:'',\r\n    choice_list:[],\r\n    q_num:0,\r\n    uuid:'',\r\n    category:''\r\n  }\r\n\r\n  componentDidMount(){\r\n    localStorage.setItem(\"q\",0)\r\n    let testID = this.props.match.params['testId']\r\n    api.get(`tests/`+testID+'/')\r\n    .then(res => {\r\n      const r = res.data[0];\r\n      const questions = r.question_list;\r\n      const current_question = r.question_list[parseInt(localStorage.getItem(\"q\"))];\r\n      this.setState(\r\n        {\r\n          questions: questions,\r\n          count: questions.length,\r\n          question_text: current_question.question_text,\r\n          choice_list:current_question.choice_list,\r\n          uuid:current_question.uuid,\r\n          category:current_question.category\r\n          }\r\n          )\r\n\r\n    })\r\n  }\r\n  setQuestion = ()=>{\r\n    let q_num = parseInt(localStorage.getItem(\"q\"))\r\n    const current_question = this.state.questions[q_num];\r\n    this.setState({\r\n      q_num:q_num,\r\n      question_text: current_question.question_text,\r\n      choice_list:current_question.choice_list,\r\n      uuid:current_question.uuid,\r\n      category:current_question.category\r\n\r\n    })\r\n\r\n  }\r\n\r\n  nextQuestion = ()=>{\r\n    let next_q = this.state.q_num === this.state.count-1?0:this.state.q_num+1\r\n    this.setNextQuestion(next_q)\r\n  }\r\n\r\n previousQuestion = ()=>{\r\n    let next_q = this.state.q_num === 0?this.state.count-1:this.state.q_num-1\r\n    this.setNextQuestion(next_q)\r\n  }\r\n\r\n  setNextQuestion =(q_num)=>{\r\n    localStorage.setItem(\"q\", q_num)\r\n    const current_question = this.state.questions[q_num];\r\n    this.setState({\r\n      q_num:q_num,\r\n      question_text: current_question.question_text,\r\n      choice_list:current_question.choice_list,\r\n      uuid:current_question.uuid,\r\n      category:current_question.category\r\n    })\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <App>\r\n        <AppHeader>   \r\n          <div class=\"d-flex flex-wrap justify-content-around w-100\">\r\n            {/* Question card */}\r\n\r\n            <div class=\"container w-100 p-5 bg-dark rounded shadow-lg \">\r\n              <div class=\"d-flex justify-content-between\">\r\n\r\n              <h5>Question {this.state.q_num+1}</h5>\r\n              <h5>Category: {this.state.category}</h5>\r\n\r\n              </div>\r\n            {/* <Question  questions={this.state.questions[1]}></Question> */}\r\n            <div class=\"card text-white bg-secondary mb-3 w-100\">\r\n                <div class=\"card-header \"><h3>{this.state.question_text}</h3></div>\r\n\r\n                <div class=\"card-body left\">\r\n                  {\r\n                    this.state.choice_list.map(\r\n                      choice=>(\r\n                        <table class=\"table table-hover table-dark\">\r\n                          <tbody>\r\n                            <tr>\r\n                              <td> \r\n                                <div class=\"text-justify\">\r\n                                    <input type=\"radio\" name={this.state.uuid}/>\r\n                                    <label for=\"male\">{choice}</label>\r\n                                </div>\r\n                              </td>\r\n                            </tr>\r\n                          </tbody>\r\n                        </table>\r\n\r\n\r\n                        \r\n                      )\r\n                    )\r\n                  }\r\n                 \r\n                </div>\r\n               \r\n            </div>\r\n            <div class=\"d-flex w-100 justify-content-between\">\r\n                  <button class=\"btn btn-primary\" onClick={this.previousQuestion}>Previous</button>\r\n                  <button class=\"btn btn-success\" >Save Response</button>\r\n                  <button class=\"btn btn-primary\" onClick={this.nextQuestion}>Next</button>\r\n                </div>\r\n\r\n            </div>\r\n            \r\n\r\n            {/* Question Nav */}\r\n            \r\n            <div class=\"container w-auto h-100 p-5 bg-dark rounded shadow-lg \" onClick={this.setQuestion}>\r\n            <h3>Navigator</h3>\r\n            <QuestionNavBlock num_questions={this.state.count}></QuestionNavBlock>\r\n            </div>\r\n        \r\n            \r\n            </div>      \r\n       \r\n      \r\n\r\n        </AppHeader>\r\n      </App>\r\n\r\n    )\r\n        }\r\n      }\r\n"],"sourceRoot":""}